;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(org-link--history compile-history org-read-date-history lsp-rename-history counsel-descbinds-history counsel-describe-symbol-history counsel-git-grep-history affe--find-history affe--grep-history ivy-history counsel-M-x-history face-name-history woman-topic-history read-expression-history empty-history shell-command-history command-history buffer-name-history yes-or-no-p-history file-name-history minibuffer-history extended-command-history evil-ex-history))
(setq compile-history '("pdflatex resume_1.tex" "lualatex resume_1.tex" "xetex resume_1.tex" "lualatex" "pdflatex resume_1.tex" "pdflatex" "make -k "))
(setq org-read-date-history '("   "))
(setq lsp-rename-history '("xx" "t" "j"))
(setq counsel-describe-symbol-history '(#("evil-qui" 0 8 (ivy-index 0)) #("evil-quit" 0 9 (ivy-index 0)) #("vterm-clear-" 0 12 (ivy-index 1)) "vterm-clear-scrollback-when-clearing" #("vterm-clear" 0 11 (ivy-index 0)) "vterm-clear-scrollback" "vterm-clear-scrollback-when-clearing" #("evil-define-oper" 0 16 (ivy-index 0)) "evil-define-operator" #("kill-line" 0 9 (ivy-index 0)) #("lsp-enabled" 0 11 (ivy-index 0)) "lsp-enabled-clients" #("counsel-f" 0 9 (ivy-index 0)) "counsel-fzf-cmd"))
(setq ivy-history '(#("conf.el" 0 7 (ivy-index 8)) "config/conf.el" #("binary_string" 0 13 (ivy-index 0)) "rand/cf/binary_string.cc" #("cp" 0 2 (ivy-index 0)) "~/cp/" #("key" 0 3 (ivy-index 0)) "./config/keymaps.el" #("em" 0 2 (ivy-index 0)) "~/.emacs.d/" #("~/cp/" 0 5 (ivy-index 0)) #("lc" 0 2 (ivy-index 0)) "rand/lc/in" #("lc/abc.cc" 0 9 (ivy-index 0)) #("leetcode/abc.cc" 0 15 (ivy-index 0)) #("packa" 0 5 (ivy-index 0)) "./config/packages.el" "./config/conf.el" #("ema" 0 3 (ivy-index 0)) "~/.emacs.d/" #("cont cf" 0 7 (ivy-index 0)) "contest/cf/" "./config/packages.el" #("~/.emacs.d/" 0 11 (ivy-index 0)) "rand/cf/binary_string.cc" #("bin" 0 3 (ivy-index 0)) "binary_string.cc" #("pack" 0 4 (ivy-index 0)) "./config/packages.el" "./config/conf.el" #("rand/cf/minimums_and_maximums.cc" 0 32 (ivy-index 0)) #("sc" 0 2 (ivy-index 0)) "*scratch*" #("packages.el" 0 11 (ivy-index 1)) "./config/packages.el" #("home/in" 0 7 (ivy-index 0)) "src/pages/home/index.js" #("k" 0 1 (ivy-index 0)) "keymaps.el" #("ind" 0 3 (ivy-index 0)) "index.js" #("footer" 0 6 (ivy-index 0)) "src/components/footer/index.js" #("in" 0 2 (ivy-index 0)) "index.js" #("pa" 0 2 (ivy-index 0)) "*scratch*" #("footer in" 0 9 (ivy-index 0)) "src/components/footer/index.js" #("ii" 0 2 (ivy-index 0)) "~/files/code/iiitt/" #("packages" 0 8 (ivy-index 0)) "./config/packages.el" #("packages." 0 9 (ivy-index 0)) "./config/packages.el" #("app" 0 3 (ivy-index 0)) "src/App.js" "src/App.js" "src/App.js" "src/components/footer/index.js" "~/files/code/iiitt/" #("1670/b.cc" 0 9 (ivy-index 0)) "contest/cf/1670/b.cc" #("1670/a" 0 6 (ivy-index 0)) "contest/cf/1670/a.cc" "*scratch*" "./config/keymaps.el" #("ke" 0 2 (ivy-index 0)) "./config/keymaps.el" #("war" 0 3 (ivy-index 0)) "*Warnings*" #("mes" 0 3 (ivy-index 0)) "*Messages*" "keymaps.el"))
(setq counsel-M-x-history '(#("^package-auto" 0 13 (ivy-index 0)) "package-autoremove" #("^package-aut" 0 12 (ivy-index 0)) "package-autoremove" #("^eval-buffer" 0 12 (ivy-index 0)) "eval-buffer" #("eval-buf" 0 8 (ivy-index 0)) "eval-buffer" #("eval-bu" 0 7 (ivy-index 0)) "eval-buffer" #("eva" 0 3 (ivy-index 0)) "eval-defun" "eval-buffer" #("eva bu" 0 6 (ivy-index 0)) "eval-buffer" #("make-emp" 0 8 (ivy-index 1)) "make-empty-file" #("find-fi" 0 7 (ivy-index 0)) "find-file" #("projectile-find-d" 0 17 (ivy-index 0)) "projectile-find-dir" #("references" 0 10 (ivy-index 0)) "lsp-find-references" #("kill" 0 4 (ivy-index 0)) "kill-line" #("evil-delete-line" 0 16 (ivy-index 0)) #("delete-line" 0 11 (ivy-index 0)) #("magi" 0 4 (ivy-index 0)) "magit" #("eval-ex" 0 7 (ivy-index 0)) "eval-expression" #("lsp" 0 3 (ivy-index 0)) #("lsp-update-server" 0 17 (ivy-index 0)) #("ls up" 0 5 (ivy-index 0)) #("lsp-ins" 0 7 (ivy-index 0)) "lsp-install-server" #("list-pack" 0 9 (ivy-index 0)) "list-packages" #("lsp-u" 0 5 (ivy-index 0)) #("ls" 0 2 (ivy-index 0)) #("eval-buffer" 0 11 (ivy-index 0)) #("eval-b" 0 6 (ivy-index 0)) #("projectile-find-file" 0 20 (ivy-index 0)) #("counsel-fzf" 0 11 (ivy-index 0)) #("autoremo" 0 8 (ivy-index 0)) "package-autoremove" #("autoremov" 0 9 (ivy-index 0)) "package-autoremove" #("counsel-file-jump" 0 17 (ivy-index 0)) #("counsel-fil" 0 11 (ivy-index 0)) #("cou" 0 3 (ivy-index 0)) #("counsel-rg" 0 10 (ivy-index 0)) #("ev" 0 2 (ivy-index 0)) #("counsel-sw" 0 10 (ivy-index 0)) "counsel-switch-buffer" #("switch buffer" 0 13 (ivy-index 0)) "switch-to-buffer" #("list bu" 0 7 (ivy-index 0)) "list-buffers" #("eva b" 0 5 (ivy-index 0)) #("projec fin file" 0 15 (ivy-index 1)) "project-find-file" #("projectile-find-file-in" 0 23 (ivy-index 0)) "projectile-find-file-in-directory" #("affe-fin" 0 8 (ivy-index 0)) "affe-find" #("affe-find" 0 9 (ivy-index 0)) #("affe" 0 4 (ivy-index 0)) "affe-grep" #("eval b" 0 6 (ivy-index 0)) "eval-defun" #("es" 0 2 (ivy-index 0)) "esup" #("esu" 0 3 (ivy-index 0)) "esup" #("magit" 0 5 (ivy-index 0)) #("e" 0 1 (ivy-index 0)) #("^ivy-presc" 0 10 (ivy-index 0)) #("ivy-prescient-mode" 0 18 (ivy-index 0)) #("^package-inst" 0 13 (ivy-index 1)) "package-install-selected-packages" #("^list-packa" 0 11 (ivy-index 0)) "list-packages" #("^eval-buf" 0 9 (ivy-index 0)) #("^eval-bu" 0 8 (ivy-index 0)) #("^pro find file" 0 14 (ivy-index 1)) "projectile--find-file" #("buffer eval" 0 11 (ivy-index 0)) "checkdoc-eval-current-buffer" "checkdoc-eval-current-buffer" "checkdoc-eval-current-buffer" "^
evil-find-file-at-point-visual
pr-ps-file-preview
calendar-forward-week
org-indent-drawer
sgml-mode
help-follow-symbol
cpp-parse-edit
dired-unmark-all-marks
search-emacs-glossary"))
(setq read-expression-history '("(list-processes)" "(single-key-description \"C-V\")" "(load-theme vscode-dark-plus-box-org-todo)" "(single-key-description 67)" "(print major-mode)" "(single-key-description 100)" "(single-key-description 18)" "(single-key-description)" "(zzz \"-l\")" "(zzz)" "(list-buffers)" "(dashboard-refresh-buffer)" "(insert (format-time-string \"%A, %B %e, %Y\"))" "(insert date)" "(insert (calc-date))" "(setq lsp-rust-analyzer-server-display-inlay-hints t)" "(setq tab-width 2)" "(setq display-line-numbers-type 'relative)" "(other-window 1)" "(print major-mode)" "(what-cursor-position)" "(zoxide-run t )" "(print truncate-lines)" "(setq lsp-clients-lua-language-server-bin \"/sbin/lua-language-server\")" "(setq truncate-lines t)" "(defalias #'forward-word #'forward-evil-symbol)" "(emacs-init-time)" "(setq vterm-clear-scrollback-when-clearing t)" "(print major-mode)" "(projectile-command-map)"))
(setq shell-command-history '("/usr/bin/zsh" "term" "tem"))
(setq command-history '((m/c) (execute-extended-command nil "m/c" "m/c") (evil-nc-change 1147 1151 'inclusive nil nil) (evil-find-char-backward nil 97) (evil-find-char-backward nil 97) (evil-find-char-backward nil 41) (evil-nc-change 991 1007 'line nil nil) (evil-nc-change 991 992 'line nil nil) (evil-find-char nil 48) (evil-replace 980 981 'exclusive 97) (evil-nc-change 911 912 'line nil nil) (evil-nc-change 911 1158 'line nil nil) (evil-destroy 911 912 'line) (evil-replace 1010 1011 'exclusive 49) (evil-yank 972 973 'inclusive nil nil) (evil-surround-region 972 981 'inclusive 41) (evil-find-char-to nil 125) (evil-find-char-backward nil 97) (evil-nc-change 948 949 'line nil nil) (evil-nc-change 1039 1044 'line nil nil) (evil-nc-change 953 958 'line nil nil) (evil-nc-change 926 931 'line nil nil) (evil-find-char nil 91) (evil-yank 870 871 'inclusive nil nil) (evil-surround-region 870 884 'inclusive 41) (evil-find-char-backward nil 97) (evil-nc-change 854 867 'line nil nil) (evil-nc-change 854 876 'line nil nil) (evil-find-char-backward nil 97) (evil-nc-change 854 865 'line nil nil) (evil-nc-change 854 865 'line nil nil) (evil-destroy 826 841 'line) (evil-destroy 854 858 'line) (evil-nc-change 854 857 'line nil nil) (evil-destroy 794 798 'inclusive) (evil-find-char-to nil 41) (evil-find-char nil 45) (evil-destroy 841 853 'line) (evil-nc-change 748 751 'line nil nil) (evil-destroy 1 1017 'line) (evil-find-char nil 120) (evil-find-char-backward nil 115) (evil-find-char nil 120) (switch-to-buffer "reverse_sort_sum.cc" nil 'force-same-window) (switch-to-buffer "reverse_sort_sum.cc" nil 'force-same-window) (switch-to-buffer "*scratch*" nil 'force-same-window) (m/c) (execute-extended-command nil "m/c" "m/c") (evil-destroy 1 1318 'line) (evil-destroy 1 22 'line) (evil-destroy 1 2 'line) (evil-destroy 1 25 'inclusive) (evil-destroy 1101 1102 'line) (evil-destroy 996 997 'line) (evil-destroy 890 891 'line) (evil-destroy 732 890 'line) (evil-destroy 890 997 'line) (evil-destroy 997 1103 'line) (evil-destroy 1103 1213 'line) (evil-destroy 1103 1213 'line) (evil-destroy 1 144 'line) (c++-mode) (execute-extended-command nil "c++-mode" "c++-mode") (switch-to-buffer "*scratch*" nil 'force-same-window) (calc-csc nil) (execute-extended-command nil "calc-csc" "sc") (compile "pdflatex resume_1.tex" nil) (execute-extended-command nil "compile" nil) (compile "lualatex resume_1.tex" nil) (execute-extended-command nil "compile" "com") (compile "xetex resume_1.tex" nil) (execute-extended-command nil "compile" nil) (compile "lualatex" nil) (execute-extended-command nil "compile" "com") (switch-to-buffer "*compilation*" nil 'force-same-window) (compile "pdflatex resume_1.tex" nil) (execute-extended-command nil "compile" nil) (compile "pdflatex" nil) (execute-extended-command nil "compile" "com") (execute-extended-command nil "compile" "compile") (execute-extended-command nil "compile" "compile") (evil-nc-change 2272 2279 'inclusive nil nil) (find-file "~/files/temp/resume-tex/resume_1.tex" t) (m/c) (execute-extended-command nil "m/c" "m/c") (evil-yank 1 301 'line nil nil) (evil-yank 1 301 'line nil nil) (evil-replace 198 199 'exclusive 111) (evil-yank 1 194 'line nil nil) (evil-nc-change 120 132 'inclusive nil nil) (evil-nc-change 23 35 'inclusive nil nil) (evil-yank 1 194 'line nil nil) (evil-find-char nil 99) (evil-yank 1 189 'line nil nil) (evil-destroy 47 48 'line) (evil-delete 47 135 'line nil nil) (evil-destroy 47 135 'line) (evil-destroy 101 103 'exclusive) (evil-yank 12 54 'line nil nil) (evil-find-char nil 39)))
(setq buffer-name-history '("reverse_sort_sum.cc" "*scratch*" "*compilation*" "*scratch*" "*dashboard*" "*scratch*" "maximum_crossings.cc" "cp.el" "maximum_crossings.cc" "*scratch*" " *Minibuf-0*" "*scratch*" "evil-surround.el" "evil-core.el" "evil-surround.el" "evil-core.el" "evil-surround.el" "*scratch*" "evil-vars.el" "evil-commands.el" "*scratch*" "evil-commands.el" "*scratch*" "*dashboard*" "*scratch*" "*Messages*" "*scratch*" "*Messages*" "*Dashboard*" "*scratch*" "*Dashboard*" "*scratch*" "fns.el" "*scratch*" "*dashboard*" "*Calendar*" "*Holidays*" "temp.cc" "*leetcode-install*" "*scratch*" "main.rs" "*scratch*" "~/abc.cc" "*scratch*" "index.html" "conf.el" "build_gates.cc" "sc" "packages.el" "*Messages*" "*scratch*" "*Messages*" "*scratch*" "*zoxide*" "zoxide.el" "*scratch*" "tokitsukaze_and_good_01_string_hard_version.cc" "*scratch*" "init.el" "*scratch*" "conf.el" "packages.el" "*scratch*" "packages.el" "*scratch*" "conf.el" "packages.el" "*scratch*" "packages.el" "keymaps.el" "*Warnings*" "*scratch*" "init.el~" "packages.el" "*scratch*" "*Backtrace*" "conf.el" "*scratch*" "packages.el" "hooks.el" ".env" "*scratch*" "init.el" "*scratch*" "init.el" "ini" "main.py" "min" "*scratch*" "init.el" "*scratch*" "ini" "*scratch*" "main.py" "*scratch*" "cpp.json" "main.py" "*scratch*" "packages.el" "*scratch*"))
(setq yes-or-no-p-history '("yes" "no" "yes" "no" "yes" "no" "yes" "no" "yes" "no" "yes" "no" "y" "yes" "no" ":no" "o"))
(setq file-name-history '("~/files/temp/resume-tex/resume_1.tex" "~/files/code/linkedlist/src/main1.rs" "~/files/code/linkedlist/src/main.rs" "~/files/code/linkedlist/" "~/cp/contest/kick/kickc2022" "~/cp/contest/kick/" "~/.emacs.d/snippets/c++-mode/bit" "~/.emacs.d/elpa/evil-20220510.2302/evil-maps.el" "~/.emacs.d/init.el" "~/cp/contest/cf/1684/" "~/.config/i3/config" "~/files/fyp/MalwareClassification/" "~/files/fyp/MalwareClassification" "~/files/fyp/" "~/task" "~/org/todo.org" "~/org/cp_todo.org" "~/org/" "~/org/.projectile" "~/org/" "~/org/cp_todo.org" "~/org/todo.org" "~/org/todo" "~/org/" "~/cp/rand/lc/temp.cc" "~/files/code/edit/" "~/files/code/praveen.gz" "~/files/code/praveen/" "~/files/code/praveen/index.html" "~/files/code/praveen" "~/files/code/" "~/cp/rand/usaco/" "/home/dinskid/evil-org-mode" "~/cp/rand/cf" "~/files/code/" "~/cp/rand/cf/tokitsukaze_and_all_zero_sequence.cc" "~/.emacs.d/config/../init.el" "~/.emacs.d/config/" "~/.config/" "~/" "~/.emacs.d/config/" "~/.emacs.d/config/keymaps.el" #("/home/dinskid/cp/leetcode/abc.cc" 0 32 (ivy-index 0)) #("/home/dinskid/cp/contest/cf/1679/a.cc" 0 37 (ivy-index 0)) "~/cp/contest/cf/1679/a.cc" "~/cp/contest/cf/1679" "TAGS" #("/home/dinskid/.emacs.d/config/keymaps.el" 0 40 (ivy-index 0)) #("/home/dinskid/.emacs.d/config/packages.el" 0 41 (ivy-index 0)) #("/home/dinskid/.emacs.d/config/conf.el" 0 37 (ivy-index 0)) #("/home/dinskid/.emacs.d/config/ivy.el" 0 36 (ivy-index 1)) #("/home/dinskid/.emacs.d/config/" 0 30 (ivy-index 0)) "~/.emacs.d/config/keymaps.el" "~/.emacs.d/config/packages.el" "~/.emacs.d/conf/packages.el" #("/home/dinskid/.emacs.d/config/.packages.el.~undo-tree~" 0 54 (ivy-index 0)) "~/.emacs.d/" "~/files/code/iiitt/" "~/.emacs.d/config/packages.el" "~/cp/rand/usaco/build_gates.cc" "~/.emacs.d/config/../init.el" "~/.emacs.d/config/packages.el" "~/files/code/iiitt/.env" "~/.emacs.d/" "~/.emacs.d/init.el" "~/.emacs.d/" #("~/" 0 2 (face selectrum-current-candidate)) "~/.emacs.d/init.el" "~/files/code/snippet_convert/c++-mode/CPTemplate" "~/files/code/snippet_convert/cpp.json" "~/files/code/snippet_convert" "~/files/code/" #("~/.emacs.d/config/" 0 18 (face selectrum-current-candidate)) "~/.emacs.d/config/hooks.el" "~/.emacs.d/config/packages.el" "~/.emacs.d/config/hooks.el" "~/.emacs.d/" "~/.emacs.d/init.el" "~/.emacs.d/elpa/" "~/.emacs.d/config/../elpa/" "~/.emacs.d/config/cp.el" "~/.emacs.d/config/keymaps.el" "~/.emacs.d/config/packages.el" "~/.emacs.d/config/../init.el" "~/.emacs.d/config/conf.el" "~/.emacs.d/config/packages.el" "~/.emacs.d/config/conf.el" "~/.emacs.d/init.el" "~/" "~/.emacs.d/config/../init.el" "~/.emacs.d/config/hooks.el" "~/.emacs.d/config/packages.el" "~/.emacs.d/" "~/.emacs.d/config/../init.el" "~/.emacs.d/config/keymaps.el" "~/.emacs.d/config/packages.el" "~/.emacs.d/snippets/c++/CPTemplate" "~/cp/tempa.cc" "~/.emacs.d/config/packages.el" "~/.emacs.d/config/cp.el"))
(setq minibuffer-history '("rand/piyush.cc" "~/cp/" "rand/cf/reverse_sort_sum.cc" "~/cp/" "list-processes" "rand/usaco/planets_cycles.cc" "~/cp/" "main.rs" "src/main.rs" "~/files/code/linkedlist/" "./todo.org" "~/org/" "evil-commentary-mode" "src/main.rs" "vterm" "./config/keymaps.el" "evil-collection-vterm-insert" "vterm-insert" "advice-add" "eval-buffer" "help-window-select" "./config/conf.el" "~/.emacs.d/" "./config/packages.el" "~/.emacs.d/" "./snippets/c++-mode/omultiset" "~/.emacs.d/" "yas--template-pretty-list" "./config/cp.el" "./utils/term.el" "~/.emacs.d/" "rand/cf/maximum_crossings.cc" "~/cp/" "./config/keymaps.el" "~/.emacs.d/" "./config/packages.el" "~/.emacs.d/" "vterm-yank-primary" "vterm-yank-pop" "vterm-mode-map" "vterm-yank" "evil-collection-define-key" "vterm--self-insert" "evil-collection-vterm-maps" "vterm-mode-map" "evil-collection-vterm-maps" "vscode-dark-plus" "vscode-dark-plus-box-org-todo" "load-theme" "vscode-dark-plus" "tsdh-light" "overlay-start" "delete-and-extract-region" "light-blue" "delete-region" "delete-and-extract-region" "./config/fns.el" "~/.emacs.d/" "evil-surround-mode-map" "single-key-description" "evil-normal-state-map" "evil-change" "delete-region" "delete" "point" "single-key-description 100" "evil-normal-state-map" "single-key-description" "evil-normal-state-map" "single-key-description" "evil-normal-state-map" "evil-move-cursor-back" "evil-mode-map-alist" "evil-delete-char" "evil-define-operator" "./todo.org" "~/org/" "~/cp/" "buffer-list" "/home/dinskid/cp/rand/cf" "default-directory" "cd" "pwd" "/home/dinskid/cp/rand/cf" "funcall" "/home/dinskid/cp/rand/cf" "completing-read" "default-directory" "split-string" "with-current-buffer" "erase-buffer" "special-mode" "called-interactively-p" "buffer-string" "call-process" "start-process" "apply" "zoxide-cd" "ttt" "zoxide-cd"))
(setq extended-command-history '("m/c" "c++-mode" "calc-csc" "compile" "m/c" "python-mode" "m/c" "python-mode" "c++-mode" "python-mode" "m/c" "python-mode" "m/c" "rustic-run-shell-command" "evil-commentary-mode" "m/c" "lsp-execute-code-action" "m/c" "yas/describe-tables" "dired" "eval-buffer" "m/c" "eval-buffer" "yas/describe-tables" "yas/new-snippet" "c++-mode" "yas/describe-tables" "eval-buffer" "m/c" "vterm-yank-primary" "vterm-yank" "delete-window" "m/c" "load-theme" "eval-buffer" "m/c" "eval-buffer" "m/c" "projectile-dired" "m/c" "pwd" "erase-buffer" "pwd" "zoxide-cd" "m/c" "dashboard-refresh-buffer" "evil-mode" "dashboard-mode" "dashboard-return" "eval-buffer" "m/m" "magit-status" "magit-init" "dired" "org-goto-calendar" "org-calendar-select" "calendar" "projectile-add-known-project" "make-empty-file" "dired" "magit-init" "calc-date" "cd" "org-mode" "c++-mode" "leetcode-try" "leetcode-daily" "leetcode" "profiler-report" "profiler-stop" "profiler-start" "company-mode" "compile" "evil-commentary-mode" "lsp" "lsp-restart-workspace" "org-mode" "list-packages" "eval-buffer" "dashboard-return" "dashboard-mode" "org-mode" "list-buffers" "dired" "term" "lsp" "lsp-restart-workspace" "lsp" "lsp-install-server" "lsp" "dired" "c++-mode" "list-buffers" "org-mode" "c++-mode" "org-mode" "dired" "list-buffers" "projectile-dired" "esup"))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("bd" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e in" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4)) #("w" 0 1 (ex-index 1)) #("we" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e main.rs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9)) #("!touch main.rs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14)) #("touch main.rs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13)) #("e main.rs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9)) #("w" 0 1 (ex-index 1)) #("e d.cc" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("e b.cc" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("%d" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("e a.cc" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("split" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e *scratch*" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11)) #("w" 0 1 (ex-index 1)) #("split" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e d.cc" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("e c.cc" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("e b.cc" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("!mkdir .outputs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15)) #("e a.cc" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("hsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("bd" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e fns.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8)) #("w" 0 1 (ex-index 1)) #("sw" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("bd" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("bd" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("bd" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("'<,'>w" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("bd" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("bd" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e index.css" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e tokitsukaze_and_good_01_string_hard_version.cc" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46) 46 47 (ex-index 47) 47 48 (ex-index 48)) #("w" 0 1 (ex-index 1)) #("bd" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1))))
(setq projectile-project-command-history '#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ()))
(setq evil-jumps-history '((1109 "/home/dinskid/cp/rand/cf/reverse_sort_sum.cc") (827 "/home/dinskid/cp/rand/cf/reverse_sort_sum.cc")))
