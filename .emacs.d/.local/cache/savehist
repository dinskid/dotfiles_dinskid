;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(ivy-history empty-history counsel-describe-symbol-history minibuffer-history evil-ex-history evil-ex-search-history file-name-history +vertico/find-file-in--history))
(setq ivy-history '(#("me" 0 2 (ivy-index 0)) "*Messages*" #("main" 0 4 (ivy-index 0)) "/home/dinskid/files/code/neovide/src/main.rs"))
(setq evil-ex-history '(#("%d" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("'<,'>w" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("36" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("116" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3))))
(setq evil-ex-search-history '("python" "rust" "cc" "lsp" "rust" "rel" "term" "tem" "teminal" ":" "languages" "c" "c++" "cpp"))
(setq file-name-history '(#("./init.el" 0 9 (ivy-index 0)) #("./config.el" 0 11 (ivy-index 0)) #("/home/dinskid/files/code/neovide/src/main.rs" 0 44 (ivy-index 0)) #("/home/dinskid/files/code/neovide/" 0 33 (ivy-index 0)) "~/.doom.d/init.el"))
(setq +vertico/find-file-in--history '("ini" "conf"))
(setq evil-jumps-history 'nil)
(setq counsel-compile-history 'nil)
(setq kill-ring '("// ==UserScript==
// @name        Codeforces reload
// @match       *://codeforces.com/problemset/problem/*/*
// @run-at      document-start
// @grant       none
// ==/UserScript==

var oldUrlPath = window.location.pathname;

var args = oldUrlPath.split(\"/\");

console.log(args);

var contestCode = args[3];
var problemCode = args[4];

console.log(\"Log from script\");
console.log(contestCode,problemCode);

if ( oldUrlPath ) {

    var newURL = `https://codeforces.com/contest/${contestCode}/problem/${problemCode}`;
    /*-- replace() puts the good page in the history instead of the
        bad page.
    */
    window.location.replace (newURL);
}
" ";;" ";;" "one" "john@doe.com" "j" "John Doe" "t" ";;"))
(setq register-alist 'nil)
(setq mark-ring 'nil)
(setq global-mark-ring 'nil)
(setq search-ring 'nil)
(setq regexp-search-ring 'nil)
